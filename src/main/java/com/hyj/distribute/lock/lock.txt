分布式情况
此处主要指集群模式下，多个相同服务同时开启.

分布式与单机情况下最大的不同在于其不是多线程而是多进程。
多线程由于可以共享堆内存，因此可以简单的采取内存作为标记存储位置。而进程之间甚至可能都不在同一台物理机上，因此需要将标记存储在一个所有进程都能看到的地方。

单机Redis锁
基本锁
原理：利用Redis的setnx如果不存在某个key则设置值，设置成功则表示取得锁成功。
缺点：如果获取锁后的进程，在还没执行完的时候挂调了，则锁永远不会释放。
改进型
改进：在基本型是锁上的setnx后设置expire，保证即使获取锁的进程不主动释放锁，过一段时间后也能自动释放。
缺点：
setnx与expire不是一个原子操作，可能执行完setnx该进程就挂了。
当锁过期后，该进程还没执行完，可能造成同时多个进程取得锁。（貌似这个问题目前还没有很优雅的解决方案）

总结
一般情况下直接用setnx加expire就够了，但从安全性的角度看还是存在一下几个问题：

单点问题。单机Redis只在单机上，如果单机down了，那么所有需要用分布式锁的地方均获取不到锁，全部阻塞。需要做好降级的处理。
可能出现多进程同时拥有锁。

https://blog.csdn.net/wenxingchen/article/details/78242779